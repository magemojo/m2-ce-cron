<h2>Cron Execution</h2>

<?php
  date_default_timezone_set('UTC');
  /* Times are stored in UTC, converting to the locale timezone for report */
  $utc = date("Y-m-d h:i:s A");
  $timezone = $block->getLocalTimezone();
  date_default_timezone_set($timezone);
  $local = date("Y-m-d h:i:s A");
  $timediff = (strtotime($utc) - strtotime($local));
  print 'Execution times are in '.$timezone;
  print '<br/>';
  print '<br/>';
?>
<table width="100%" border="1" id="report">
<thead>
<tr>
<th style="padding: 4px; cursor: pointer;" onclick="sortTable(0);"><b>Job Code</b></th>
<th style="padding: 4px; cursor: pointer;" onclick="sortTable(1); cursor: pointer;"><b>Running</b></th>
<th style="padding: 4px; cursor: pointer;" onclick="sortTable(2)"><b>Success</b></th>
<th style="padding: 4px; cursor: pointer;" onclick="sortTable(3)"><b>Pending</b></th>
<th style="padding: 4px; cursor: pointer;" onclick="sortTable(4)"><b>Missed</b></th>
<th style="padding: 4px; cursor: pointer;" onclick="sortTable(5)"><b>Error</b></th>
<th style="padding: 4px; cursor: pointer;" onclick="sortTable(6)"><b>Last Executed</b></th>
<th style="padding: 4px; cursor: pointer;" onclick="sortTable(7)"><b>Last Runtime</b></th>
<th style="padding: 4px;"><b>Actions</b></th>
</tr>
</thead>
<tbody>
<?php
  $reports = $block->getReport();

  $jobs = array();
  $job_code = '';
  foreach($reports as $report) {
    if ($report["job_code"] != $job_code) {
      $jobs[$report["job_code"]] = array('success' => 0, 'running' => 0, 'pending' => 0, 'missed' => 0, 'error' => 0, 'executed_at' => 'N/A');
      $job_code = $report["job_code"];
    }
    if (($report["status"] == 'success' and $jobs[$report["job_code"]]["executed_at"] == 'N/A') or $report["status"] == 'running') {
      $jobs[$report["job_code"]]["executed_at"] = $report["executed_at"];
      $jobs[$report["job_code"]]["finished_at"] = $report["finished_at"];
    }
    $jobs[$report["job_code"]][$report["status"]] = $report["count"];
  }
  //print_r($jobs);
  foreach ($jobs as $job_code=>$job) {
    if ($job["executed_at"] == 'N/A') {
      $executed = $job["executed_at"];
      $runtime = '';
    } else {
        $executed = strtotime((string) $job["executed_at"]) ?? '';
        $executed = $executed ? date("Y-m-d h:i:s A",($executed - $timediff)) : '';
        $finished = strtotime((string) $job["finished_at"]) ?? '';
        $runtime = ($finished !== '' && $executed !== '') ?
            strtotime($job["finished_at"]) - strtotime($job["executed_at"]) . 's' : '';
    }
    //print_r($job);
    print '<tr>';
    print '<td style="padding: 4px;">'.$job_code.'</td>';
    print '<td style="padding: 4px;">'.$job["running"].'</td>';
    print '<td style="padding: 4px;">'.$job["success"].'</td>';
    print '<td style="padding: 4px;">'.$job["pending"].'</td>';
    print '<td style="padding: 4px;">'.$job["missed"].'</td>';
    print '<td style="padding: 4px;">'.$job["error"].'</td>';
    print '<td style="padding: 4px;">'.$executed.'</td>';
    print '<td style="padding: 4px;">'.$runtime.'</td>';
    print '<td style="padding: 4px;"><a href="'.$block->getUrl("magemojocron/reports/execute",array("jobcode" => $job_code)).'">Execute</a></td>';
    print '</tr>';
  }

?>
</tbody>
</table>
<br/>
<br/>
<h2>Errors</h2>
<table width="100%" border="1">
<thead>
<tr>
<th style="padding: 4px;"><b>Job Code</b></th>
<th style="padding: 4px;"><b>Error</b></th>
</tr>
</thead>
<tbody>
<?php
$errors = $block->getErrorReport();
foreach($errors as $error) {
  print '<tr>';
  print '<td style="padding: 4px;">'.$error["job_code"].'</td>';
  print '<td style="padding: 4px;">'.$error["messages"].'</td>';
  print '</tr>';
}
?>

</tbody>
</table>

<br/>
<br/>
* Parent Cron Process Terminated Abnormally means the parent cron service was killed or disabled while this job was running, it most likely successfully completed, but the final status could not be determined.

<script>
function sortTable(n) {
  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
  table = document.getElementById("report");
  switching = true;
  // Set the sorting direction to ascending:
  dir = "asc";
  /* Make a loop that will continue until
  no switching has been done: */
  while (switching) {
    // Start by saying: no switching is done:
    switching = false;
    rows = table.rows;
    /* Loop through all table rows (except the
    first, which contains table headers): */
    for (i = 1; i < (rows.length - 1); i++) {
      // Start by saying there should be no switching:
      shouldSwitch = false;
      /* Get the two elements you want to compare,
      one from current row and one from the next: */
      x = rows[i].getElementsByTagName("TD")[n];
      y = rows[i + 1].getElementsByTagName("TD")[n];
      /* Check if the two rows should switch place,
      based on the direction, asc or desc: */
      if (dir == "asc") {
        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
          // If so, mark as a switch and break the loop:
          shouldSwitch = true;
          break;
        }
      } else if (dir == "desc") {
        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
          // If so, mark as a switch and break the loop:
          shouldSwitch = true;
          break;
        }
      }
    }
    if (shouldSwitch) {
      /* If a switch has been marked, make the switch
      and mark that a switch has been done: */
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
      // Each time a switch is done, increase this count by 1:
      switchcount ++;
    } else {
      /* If no switching has been done AND the direction is "asc",
      set the direction to "desc" and run the while loop again. */
      if (switchcount == 0 && dir == "asc") {
        dir = "desc";
        switching = true;
      }
    }
  }
}
</script>
